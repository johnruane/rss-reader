{"version":3,"sources":["components/ArticleList.js","components/Pagination.js","components/SortBy.js","components/ShowMe.js","helpers/filterHelpers.js","helpers/stringHelpers.js","index.js"],"names":["ArticleList","this","props","articles","map","element","index","react_default","a","createElement","className","key","href","link","target","rel","src","alt","heading","website","displaydate","React","Component","Pagination","_this$props","numberOfPages","current","handlePagination","activeOlder","activeNewer","concat","onClick","value","SortBy","onSortClick","sortByChecked","title","type","name","id","defaultChecked","onChange","e","htmlFor","ShowMe","onShowClick","showMeChecked","sortArticles","sortOrder","sortedArticles","Object","toConsumableArray","sort","b","pubdate","getDisplayDate","datestr","newdate","Date","getDate","getMonth","sourceWebsites","url","RssReader","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","allArticles","articlesToRender","showMe","currentPage","handleSortArticles","bind","assertThisInitialized","handleShowMe","parseInt","setState","slice","Math","ceil","length","startPos","endPos","direction","newArticles","currentPosition","previousPosition","forEach","promise","getArticleItems","push","Promise","all","allArticlesDetails","flatArticles","_ref","apply","item","imageUrl","websiteStr","querySelector","textContent","split","replace","DOMParser","parseFromString","getAttribute","getTime","ShowMe_ShowMe","SortBy_SortBy","components_ArticleList","components_Pagination","_callee2","response","results","domparser","document","_document$querySelect","_document$querySelect2","items","regenerator_default","wrap","_context2","prev","next","fetch","sent","text","querySelectorAll","toArray","abrupt","stop","ReactDOM","render","src_RssReader","getElementById"],"mappings":"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","file":"static/js/main.703c03ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ArticleList extends React.Component {\r\n    render() {\r\n      let articles = this.props.articles;\r\n  \r\n      return (\r\n        articles.map((element, index) => {\r\n          return (\r\n            <article className=\"article\" key={index}>\r\n              <div className=\"article-inner\">\r\n                <a className=\"article-link\" href={element.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img className=\"article-image\" src={element.src} alt=\"\"/>\r\n                  <h3 className=\"article-heading\">{element.heading}</h3>                \r\n                </a>\r\n                <p className=\"article-origin\">{element.website} - {element.displaydate}</p>\r\n              </div>\r\n            </article>\r\n          )\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ArticleList;","import React from 'react';\r\n\r\nclass Pagination extends React.Component {\r\n    render() {\r\n        const { numberOfPages, current, handlePagination } = this.props;\r\n        const activeOlder = (current < numberOfPages) ? ' active' : '';\r\n        const activeNewer = (current > 1) ? ' active' : '';\r\n\r\n        return (\r\n        <div className=\"pagination\">\r\n            <button className={`pagination-button${activeOlder}`} onClick={handlePagination} value=\"older\">⇦ Older</button>\r\n            <button className={`pagination-button${activeNewer}`} onClick={handlePagination} value=\"newer\">Newer ⇨</button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nexport default class SortBy extends React.Component {\r\n  render() {\r\n    const { onSortClick, sortByChecked } = this.props;\r\n    return (\r\n      <div className=\"filter-by\">\r\n        <p className=\"filter-heading\">{this.props.title}: </p>\r\n        <div className=\"segmented-control\">\r\n          <input className=\"segmented-control-input\" type=\"radio\" name=\"sc-1\" id=\"sc-1-2\" \r\n            defaultChecked={sortByChecked === \"descending\"} onChange={e => onSortClick(e)} value=\"descending\" />\r\n          <label className=\"segmented-control-label\" htmlFor=\"sc-1-2\">↓</label>\r\n          <input className=\"segmented-control-input\" type=\"radio\" name=\"sc-1\" id=\"sc-1-1\" \r\n            defaultChecked={sortByChecked === \"ascending\"} onChange={e => onSortClick(e)} value=\"ascending\" />\r\n          <label className=\"segmented-control-label\" htmlFor=\"sc-1-1\">↑</label>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ShowMe extends React.Component {\r\n  render() {\r\n    const { onShowClick, showMeChecked } = this.props;\r\n    return (\r\n      <div className=\"filter-by\">\r\n        <p className=\"filter-heading\">{this.props.title}: </p>\r\n        <div className=\"segmented-control\">      \r\n          <input className=\"segmented-control-input\" type=\"radio\" name=\"sc-2\" id=\"sc-2-1\" \r\n            defaultChecked={showMeChecked === 5} onChange={e => onShowClick(e)} value=\"5\" />\r\n          <label className=\"segmented-control-label\" htmlFor=\"sc-2-1\">5</label>\r\n          <input className=\"segmented-control-input\" type=\"radio\" name=\"sc-2\" id=\"sc-2-2\" \r\n            defaultChecked={showMeChecked === 10} onChange={e => onShowClick(e)} value=\"10\" />\r\n          <label className=\"segmented-control-label\" htmlFor=\"sc-2-2\">10</label>\r\n          <input className=\"segmented-control-input\" type=\"radio\" name=\"sc-2\" id=\"sc-2-3\" \r\n            defaultChecked={showMeChecked === 25} onChange={e => onShowClick(e)} value=\"25\" />\r\n          <label className=\"segmented-control-label\" htmlFor=\"sc-2-3\">25</label>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export function sortArticles(sortOrder, articles) {\r\n  let sortedArticles;\r\n\r\n  switch (sortOrder) {\r\n    case 'ascending':\r\n      sortedArticles = [...articles].sort((a, b) => {\r\n        return a.pubdate - b.pubdate;\r\n      });\r\n      break;\r\n    case 'descending':\r\n      sortedArticles = [...articles].sort((a, b) => {\r\n        return b.pubdate - a.pubdate;\r\n      });\r\n      break;\r\n    default:\r\n      sortedArticles = articles;\r\n  }\r\n\r\n  return sortedArticles;\r\n}","function getPubDate(datestr) {\r\n  const newdate = new Date(datestr);\r\n  return newdate.getTime();\r\n}\r\n\r\nfunction getDisplayDate(datestr) {\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  const newdate = new Date(datestr);\r\n  return `${newdate.getDate()} ${monthNames[newdate.getMonth()]}`\r\n}\r\n\r\nfunction getWebsiteString(str) {\r\n  let strNoProocol = str.split('//')[1];\r\n  let strNoPath = strNoProocol.split('.com')[0];\r\n  let noDubs = strNoPath.replace('www.', '');\r\n  return noDubs;\r\n}\r\n\r\nexport { getPubDate, getWebsiteString, getDisplayDate };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ArticleList from './components/ArticleList.js';\r\nimport Pagination from './components/Pagination.js';\r\nimport SortBy from './components/SortBy.js';\r\nimport ShowMe from './components/ShowMe.js';\r\nimport { sortArticles } from './helpers/filterHelpers.js';\r\nimport { getPubDate, getWebsiteString, getDisplayDate } from './helpers/stringHelpers.js';\r\n\r\nconst sourceWebsites = [\r\n  {title: 'refinery29', url: 'https://www.refinery29.com/rss.xml'},\r\n  {title: 'i-d', url: 'https://i-d.vice.com/en_uk/rss'},\r\n];\r\n\r\nexport default class RssReader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allArticles: [],\r\n      articlesToRender: [],\r\n      sortOrder: 'descending',\r\n      showMe: 5,\r\n      currentPage: 1,\r\n      numberOfPages: 1,\r\n    }\r\n\r\n    this.handleSortArticles = this.handleSortArticles.bind(this);\r\n    this.handleShowMe = this.handleShowMe.bind(this);\r\n    this.handlePagination = this.handlePagination.bind(this);\r\n  }\r\n\r\n  // onclick function to only show a set number of the main articles\r\n  handleShowMe(e) {\r\n    const showMe = parseInt(e.target.value, 10);\r\n    this.setState({\r\n      articlesToRender: sortArticles(this.state.sortOrder, this.state.allArticles.slice(0, showMe)),\r\n      numberOfPages: Math.ceil(this.state.allArticles.length/showMe),\r\n      showMe: showMe,\r\n    });\r\n  }\r\n\r\n  // onclick function to sort the articles on show by date\r\n  handleSortArticles(e) {\r\n    let sortedArticles = sortArticles(e.target.value, this.state.allArticles);\r\n    const startPos = (this.state.currentPage * this.state.showMe) - this.state.showMe;\r\n    const endPos = this.state.currentPage * this.state.showMe;\r\n    this.setState({\r\n      allArticles: sortedArticles,\r\n      articlesToRender: sortedArticles.slice(startPos, endPos),\r\n      sortOrder: e.target.value,\r\n    });\r\n  }\r\n\r\n  // set articlesToRender to be a subset of allArticles based on calculating current position in allArticles\r\n  handlePagination(e) {\r\n    const direction = e.target.value; \r\n    let currentPage =  this.state.currentPage;\r\n\r\n    // prevent click when travelling forwards/backwards in allArticles if conditions met\r\n    if ((direction === 'newer' & currentPage === 1) || (direction === 'older') & currentPage === this.state.numberOfPages) {\r\n      return\r\n    }\r\n\r\n    let newArticles = [];\r\n    const allArticles = this.state.allArticles;   \r\n    const showMe = this.state.showMe;\r\n\r\n    // work out currentPosition by multiplying currentPage & showMe ie (page 2 * show 8 = allArticles[16])\r\n    if (direction === \"older\") {\r\n      const currentPosition = this.state.showMe * this.state.currentPage;\r\n      newArticles = allArticles.slice(currentPosition, (currentPosition + showMe));\r\n      this.setState({\r\n        articlesToRender: newArticles,\r\n        currentPage: currentPage + 1,\r\n      })\r\n    } else if (direction === \"newer\") {\r\n    // going backwards, current position is  is calculated using previous page, then subtracting\r\n      const previousPosition = (this.state.currentPage - 1) * showMe;\r\n      newArticles = allArticles.slice((previousPosition - showMe), previousPosition);\r\n      this.setState({\r\n        articlesToRender: newArticles,\r\n        currentPage: currentPage - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const allArticles = [];\r\n\r\n    // collect all xml feeds together in 1 array\r\n    sourceWebsites.forEach(function(element) {\r\n      const promise = getArticleItems(`https://cors-anywhere.herokuapp.com/${element.url}`);\r\n      allArticles.push(promise);\r\n    });\r\n\r\n    // prevent further execution until all promises are fulfilled\r\n    const allArticlesDetails = await Promise.all(allArticles);\r\n    const flatArticles = [].concat(...allArticlesDetails);\r\n\r\n    // map through array of xml feeds and extract data\r\n    const articles = flatArticles.map((item) => {\r\n      let imageUrl;\r\n\r\n      // process long website url to be short version\r\n      const websiteStr = getWebsiteString(item.querySelector('link').textContent);\r\n            \r\n      // site specific code to extract article image url\r\n      switch (websiteStr) {\r\n        case 'refinery29' : \r\n          const domParser = new DOMParser();\r\n          const imageParser = domParser.parseFromString(item.querySelector('item description').textContent, 'text/xml');\r\n          imageUrl = imageParser.querySelector('figure img').getAttribute('src');\r\n          break;\r\n        case 'i-d.vice' : \r\n          imageUrl = item.querySelector('enclosure').getAttribute('url');\r\n          break;\r\n        default :\r\n          imageUrl = '--'\r\n      }\r\n\r\n      return ({\r\n          website: websiteStr,\r\n          heading: item.querySelector('title').textContent,\r\n          src: imageUrl,\r\n          link: item.querySelector('link').textContent,\r\n          pubdate: getPubDate(item.querySelector('pubDate').textContent),\r\n          displaydate: getDisplayDate(item.querySelector('pubDate').textContent),\r\n      })\r\n    })\r\n\r\n    // sort articles by default sort order before setting state\r\n    const sortedArticles = sortArticles(this.state.sortOrder, articles);\r\n    // copy the articles and return a subsection based on 'showMe'\r\n    const articlesToRender = [...sortedArticles].slice(0, this.state.showMe);\r\n\r\n    this.setState({\r\n      allArticles: sortedArticles,\r\n      articlesToRender: articlesToRender,\r\n      numberOfPages: Math.ceil(articles.length/this.state.showMe),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"article-container\">\r\n        <div className=\"header\">\r\n          <ShowMe title=\"Show\" showMeChecked={this.state.showMe} onShowClick={this.handleShowMe} />\r\n          <SortBy title=\"Sort\" sortByChecked={this.state.sortOrder} onSortClick={this.handleSortArticles}/>\r\n        </div>\r\n        <ArticleList articles={this.state.articlesToRender} />\r\n        <Pagination numberOfPages={this.state.numberOfPages} current={this.state.currentPage} handlePagination={this.handlePagination} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// fetch xml data from url and return as an array of DOMLists\r\nasync function getArticleItems(url) {\r\n  const response = await fetch(url);\r\n  const results = await response.text();\r\n  const domparser = new DOMParser();\r\n  const document = domparser.parseFromString(results, 'text/xml');\r\n  const [...items] = document.querySelectorAll('channel item');\r\n  return items;\r\n}\r\n\r\nReactDOM.render(<RssReader />, document.getElementById(\"root\"));"],"sourceRoot":""}